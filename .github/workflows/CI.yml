name: CI

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  # codacy-test:
  #   name: Codacy Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Run Codacy Analysis CLI
  #       uses: codacy/codacy-analysis-cli-action@master
  #       with:
  #         output: results.sarif
  #         format: sarif
  #         gh-code-scanning-compat: true
  #         max-allowed-issues: 2147483647
  #     - name: Upload results
  #       uses: github/codeql-action/upload-sarif@main
  #       with:
  #         sarif_file: results.sarif
  #-------------------------------------------------
  #            ===== [ Backend ] =====
  #-------------------------------------------------
  backend-test:
    name: Test | Ruby
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"
      - name: Install gems
        run: bundle install
      - name: Run tests
        run: ./run_unit_tests.sh
      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: backend/coverage/lcov/backend.lcov
  # backend-security-test:
  #   name: Security Test | Ruby
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Check for vulnerabilities
  #       uses: snyk/actions/ruby@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --sarif-file-output=snyk.sarif backend
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: snyk.sarif
  # backend-security-monitor:
  #   name: Security Monitor | Ruby
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Check for vulnerabilities
  #       uses: snyk/actions/ruby@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: backend
  #         command: monitor
  #-------------------------------------------------
  #            ===== [ Frontend ] =====
  #-------------------------------------------------
  frontend-test:
    name: Test | Node.js
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 15.x
      - name: Install modules
        run: yarn install
      - name: Run tests
        run: yarn jest --coverage
      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: frontend/coverage/lcov.info
  # frontend-security-test:
  #   name: Security Test | Node.js
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Check for vulnerabilities
  #       uses: snyk/actions/node@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --sarif-file-output=snyk.sarif frontend
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: snyk.sarif
  # frontend-security-monitor:
  #   name: Security Monitor | Node.js
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Check for vulnerabilities
  #       uses: snyk/actions/node@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: frontend
  #         command: monitor
  #-------------------------------------------------
  #             ===== [ Infra ] =====
  #-------------------------------------------------
  # infra-security-test:
  #   name: Security Test | Terraform
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Check for vulnerabilities
  #       uses: snyk/actions/iac@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --sarif-file-output=snyk.sarif infra
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: snyk.sarif
