name: CI

on:
  pull_request:
    branches: [main]

jobs:
  pr-labeler:
    name: PR Labeler
    runs-on: ubuntu-latest

    steps:
      - name: Label
        uses: TimonVS/pr-labeler-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  codacy-test:
    name: Test | Codacy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          max-allowed-issues: 2147483647
          upload: true

  cypress-test:
    name: Test | Cypress
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker-compose pull
        run: docker-compose pull

      - name: Docker Layer Caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Start app
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          docker-compose -f docker-compose.ci.yml up -d

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: "yarn"

      - name: Install modules
        run: yarn install -s
        working-directory: ./frontend

      - name: Run Cypress tests
        run: yarn cypress run
        working-directory: ./frontend

      - name: Stop app
        run: docker-compose down

  #-------------------------------------------------
  #            ===== [ Backend ] =====
  #-------------------------------------------------

  backend-test:
    name: Test | Ruby
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"

      - name: Install gems
        run: bundle install --jobs $(nproc) --quiet

      - name: Run tests
        run: |
          ./run_unit_tests.sh
          ./run_integration_tests.sh

      - name: Fix lcov report
        run: sed -i 's/\.\///g' coverage/lcov/backend.lcov

      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: backend/coverage/lcov/backend.lcov

  backend-security-test:
    name: Security Test | Ruby
    runs-on: ubuntu-latest
    needs: backend-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk Analysis
        uses: snyk/actions/ruby@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif backend

      - name: Upload results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  backend-security-monitor:
    name: Security Monitor | Ruby
    runs-on: ubuntu-latest
    needs: backend-security-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk Analysis
        uses: snyk/actions/ruby@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: backend
          command: monitor

  #-------------------------------------------------
  #            ===== [ Frontend ] =====
  #-------------------------------------------------

  frontend-test:
    name: Test | Node.js
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install modules
        run: yarn install -s

      - name: Run tests
        run: yarn test --coverage a

      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: frontend/coverage/lcov.info

  frontend-security-test:
    name: Security Test | Node.js
    runs-on: ubuntu-latest
    needs: frontend-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk Analysis
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif frontend

      - name: Upload results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  frontend-security-monitor:
    name: Security Monitor | Node.js
    runs-on: ubuntu-latest
    needs: frontend-security-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk Analysis
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: frontend
          command: monitor

  #-------------------------------------------------
  #             ===== [ Infra ] =====
  #-------------------------------------------------

  infra-check:
    name: Check | Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Format Check in root
        run: terraform fmt -check

      - name: Format Check in setup
        run: |
          cd setup
          terraform fmt -check

  infra-security-test:
    name: Security Test | Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk Analysis
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif infra

      - name: Upload results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
